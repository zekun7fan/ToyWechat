<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.friend_service.dao.FriendMapper">
  <resultMap id="BaseResultMap" type="org.example.commonUtils.entity.Friend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <id column="friend_id" jdbcType="VARCHAR" property="friendId" />
    <result column="topic_id" jdbcType="VARCHAR" property="topicId" />
    <result column="hide_myself" jdbcType="BIT" property="hideMyself" />
    <result column="block_opposite" jdbcType="BIT" property="blockOpposite" />
    <result column="in_chatting" jdbcType="BIT" property="inChatting" />
    <result column="valid" jdbcType="BIT" property="valid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    id, user_id, friend_id, topic_id, hide_myself, block_opposite, in_chatting, valid
  </sql>
  <select id="selectByExample" parameterType="org.example.commonUtils.entity.FriendExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    from friend
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=VARCHAR}
      and friend_id = #{friendId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    delete from friend
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=VARCHAR}
      and friend_id = #{friendId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.commonUtils.entity.FriendExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    delete from friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.example.commonUtils.entity.Friend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    insert into friend (id, user_id, friend_id, 
      topic_id, hide_myself, block_opposite, 
      in_chatting, valid)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{friendId,jdbcType=VARCHAR}, 
      #{topicId,jdbcType=VARCHAR}, #{hideMyself,jdbcType=BIT}, #{blockOpposite,jdbcType=BIT}, 
      #{inChatting,jdbcType=BIT}, #{valid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="org.example.commonUtils.entity.Friend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    insert into friend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="friendId != null">
        friend_id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="hideMyself != null">
        hide_myself,
      </if>
      <if test="blockOpposite != null">
        block_opposite,
      </if>
      <if test="inChatting != null">
        in_chatting,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="friendId != null">
        #{friendId,jdbcType=VARCHAR},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=VARCHAR},
      </if>
      <if test="hideMyself != null">
        #{hideMyself,jdbcType=BIT},
      </if>
      <if test="blockOpposite != null">
        #{blockOpposite,jdbcType=BIT},
      </if>
      <if test="inChatting != null">
        #{inChatting,jdbcType=BIT},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.commonUtils.entity.FriendExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    select count(*) from friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    update friend
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.friendId != null">
        friend_id = #{record.friendId,jdbcType=VARCHAR},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=VARCHAR},
      </if>
      <if test="record.hideMyself != null">
        hide_myself = #{record.hideMyself,jdbcType=BIT},
      </if>
      <if test="record.blockOpposite != null">
        block_opposite = #{record.blockOpposite,jdbcType=BIT},
      </if>
      <if test="record.inChatting != null">
        in_chatting = #{record.inChatting,jdbcType=BIT},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    update friend
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      friend_id = #{record.friendId,jdbcType=VARCHAR},
      topic_id = #{record.topicId,jdbcType=VARCHAR},
      hide_myself = #{record.hideMyself,jdbcType=BIT},
      block_opposite = #{record.blockOpposite,jdbcType=BIT},
      in_chatting = #{record.inChatting,jdbcType=BIT},
      valid = #{record.valid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.commonUtils.entity.Friend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    update friend
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=VARCHAR},
      </if>
      <if test="hideMyself != null">
        hide_myself = #{hideMyself,jdbcType=BIT},
      </if>
      <if test="blockOpposite != null">
        block_opposite = #{blockOpposite,jdbcType=BIT},
      </if>
      <if test="inChatting != null">
        in_chatting = #{inChatting,jdbcType=BIT},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=VARCHAR}
      and friend_id = #{friendId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.commonUtils.entity.Friend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 19:27:45 EDT 2022.
    -->
    update friend
    set topic_id = #{topicId,jdbcType=VARCHAR},
      hide_myself = #{hideMyself,jdbcType=BIT},
      block_opposite = #{blockOpposite,jdbcType=BIT},
      in_chatting = #{inChatting,jdbcType=BIT},
      valid = #{valid,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=VARCHAR}
      and friend_id = #{friendId,jdbcType=VARCHAR}
  </update>
</mapper>